/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import dao.ClienteDAO;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Cliente;
import model.Endereco;

public class ClienteGUI extends javax.swing.JFrame {

    /**
     * Creates new form ClienteGUIteste
     */
    public ClienteGUI() {
        initComponents();
        setLocationRelativeTo(null);
        
        tbCliente.addMouseListener(new java.awt.event.MouseAdapter() {
        @Override
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            // Pega a linha que foi clicada na tabela
            int selectedRow = tbCliente.getSelectedRow();
            
            // Garante que uma linha válida foi selecionada
            if (selectedRow != -1) {
                // Preenche os campos do formulário com os dados da linha selecionada
                preencherCamposComLinhaSelecionada(selectedRow);
            }
        }
    });
    }
    
    private void preencherCamposComLinhaSelecionada(int row) {
    // Pega o modelo da tabela para acessar os dados
    DefaultTableModel modelo = (DefaultTableModel) tbCliente.getModel();

    // Pega o valor de cada coluna da linha selecionada e coloca nos campos de texto
    // O método .toString() é usado para garantir que o valor seja uma String
    cxID.setText(modelo.getValueAt(row, 0).toString());
    cxNome.setText(modelo.getValueAt(row, 1).toString());
    cxEmail.setText(modelo.getValueAt(row, 2).toString());
    cxTelefone.setText(modelo.getValueAt(row, 3).toString());
    cxCidade.setText(modelo.getValueAt(row, 4).toString());
    cxRua.setText(modelo.getValueAt(row, 5).toString());
    cxBairro.setText(modelo.getValueAt(row, 6).toString());
    cxNumero.setText(modelo.getValueAt(row, 7).toString());
    cxComplemento.setText(modelo.getValueAt(row, 8).toString());

    // MUITO IMPORTANTE: Bloqueia o campo de ID para que o usuário não possa alterá-lo
    cxID.setEditable(false);
}
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cxTelefone = new javax.swing.JTextField();
        cxEmail = new javax.swing.JTextField();
        cxCidade = new javax.swing.JTextField();
        cxNome = new javax.swing.JTextField();
        cxBairro = new javax.swing.JTextField();
        cxRua = new javax.swing.JTextField();
        cxComplemento = new javax.swing.JTextField();
        cxNumero = new javax.swing.JTextField();
        btAdicionar = new javax.swing.JButton();
        btAtualizar = new javax.swing.JButton();
        btListar = new javax.swing.JButton();
        btSair = new javax.swing.JButton();
        btDeletar = new javax.swing.JButton();
        btConsultar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbCliente = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        cxID = new javax.swing.JTextField();
        btListar1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel5.setText("Nome:");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gerenciar Cliente");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(102, 102, 255));

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("GERENCIAR CLIENTE");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(304, 304, 304)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(29, 29, 29))
        );

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel1.setText("Telefone:");

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel3.setText("Email:");

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel4.setText("Nome:");

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel8.setText("Complemento:");

        jLabel9.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel9.setText("Numero:");

        jLabel10.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel10.setText("Cidade:");

        jLabel11.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel11.setText("Rua:");

        jLabel12.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel12.setText("Bairro:");

        cxTelefone.setMinimumSize(new java.awt.Dimension(64, 30));
        cxTelefone.setPreferredSize(new java.awt.Dimension(64, 30));
        cxTelefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cxTelefoneActionPerformed(evt);
            }
        });

        cxEmail.setMinimumSize(new java.awt.Dimension(64, 30));
        cxEmail.setPreferredSize(new java.awt.Dimension(64, 30));
        cxEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cxEmailActionPerformed(evt);
            }
        });

        cxCidade.setMinimumSize(new java.awt.Dimension(64, 30));
        cxCidade.setPreferredSize(new java.awt.Dimension(64, 30));
        cxCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cxCidadeActionPerformed(evt);
            }
        });

        cxNome.setMinimumSize(new java.awt.Dimension(64, 30));
        cxNome.setPreferredSize(new java.awt.Dimension(64, 30));
        cxNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cxNomeActionPerformed(evt);
            }
        });

        cxBairro.setMinimumSize(new java.awt.Dimension(64, 30));
        cxBairro.setPreferredSize(new java.awt.Dimension(64, 30));
        cxBairro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cxBairroActionPerformed(evt);
            }
        });

        cxRua.setMinimumSize(new java.awt.Dimension(64, 30));
        cxRua.setPreferredSize(new java.awt.Dimension(64, 30));
        cxRua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cxRuaActionPerformed(evt);
            }
        });

        cxComplemento.setMinimumSize(new java.awt.Dimension(64, 30));
        cxComplemento.setPreferredSize(new java.awt.Dimension(64, 30));
        cxComplemento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cxComplementoActionPerformed(evt);
            }
        });

        cxNumero.setMinimumSize(new java.awt.Dimension(64, 30));
        cxNumero.setPreferredSize(new java.awt.Dimension(64, 30));
        cxNumero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cxNumeroActionPerformed(evt);
            }
        });

        btAdicionar.setBackground(new java.awt.Color(102, 102, 255));
        btAdicionar.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        btAdicionar.setForeground(new java.awt.Color(255, 255, 255));
        btAdicionar.setText("Adicionar");
        btAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarActionPerformed(evt);
            }
        });

        btAtualizar.setBackground(new java.awt.Color(102, 102, 255));
        btAtualizar.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        btAtualizar.setForeground(new java.awt.Color(255, 255, 255));
        btAtualizar.setText("Atualizar");
        btAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtualizarActionPerformed(evt);
            }
        });

        btListar.setBackground(new java.awt.Color(102, 102, 255));
        btListar.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        btListar.setForeground(new java.awt.Color(255, 255, 255));
        btListar.setText("Listar");
        btListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btListarActionPerformed(evt);
            }
        });

        btSair.setBackground(new java.awt.Color(102, 102, 255));
        btSair.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        btSair.setForeground(new java.awt.Color(255, 255, 255));
        btSair.setText("Sair");
        btSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSairActionPerformed(evt);
            }
        });

        btDeletar.setBackground(new java.awt.Color(102, 102, 255));
        btDeletar.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        btDeletar.setForeground(new java.awt.Color(255, 255, 255));
        btDeletar.setText("Deletar");
        btDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeletarActionPerformed(evt);
            }
        });

        btConsultar.setBackground(new java.awt.Color(102, 102, 255));
        btConsultar.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        btConsultar.setForeground(new java.awt.Color(255, 255, 255));
        btConsultar.setText("Consultar");
        btConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConsultarActionPerformed(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        tbCliente.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        tbCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Email", "Telefone", "Cidade", "Rua", "Bairro", "Numero", "Complemento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbCliente.setAutoResizeMode(0);
        tbCliente.setRowHeight(30);
        jScrollPane1.setViewportView(tbCliente);
        if (tbCliente.getColumnModel().getColumnCount() > 0) {
            tbCliente.getColumnModel().getColumn(0).setPreferredWidth(120);
            tbCliente.getColumnModel().getColumn(1).setPreferredWidth(120);
            tbCliente.getColumnModel().getColumn(2).setPreferredWidth(180);
            tbCliente.getColumnModel().getColumn(4).setPreferredWidth(120);
        }

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel7.setText("CPF/CNPJ:");

        cxID.setMinimumSize(new java.awt.Dimension(64, 30));
        cxID.setPreferredSize(new java.awt.Dimension(64, 30));
        cxID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cxIDActionPerformed(evt);
            }
        });

        btListar1.setBackground(new java.awt.Color(102, 102, 255));
        btListar1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        btListar1.setForeground(new java.awt.Color(255, 255, 255));
        btListar1.setText("Limpar");
        btListar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btListar1ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 255));
        jLabel6.setText("Lista de Clientes");

        jLabel13.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(102, 102, 255));
        jLabel13.setText("Dados do Cliente");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cxTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cxEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cxCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cxBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cxRua, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cxComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cxNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cxNome, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cxID, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(btAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(btListar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(btDeletar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(btListar1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(btSair, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(47, 47, 47)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(112, 112, 112))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cxID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cxNome, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cxTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cxEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(cxCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(cxBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(cxRua, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(cxNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(cxComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btListar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btDeletar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btListar1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addComponent(btSair, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cxTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cxTelefoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cxTelefoneActionPerformed

    private void cxEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cxEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cxEmailActionPerformed

    private void cxCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cxCidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cxCidadeActionPerformed

    private void cxNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cxNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cxNomeActionPerformed

    private void cxBairroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cxBairroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cxBairroActionPerformed

    private void cxRuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cxRuaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cxRuaActionPerformed

    private void cxComplementoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cxComplementoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cxComplementoActionPerformed

    private void cxNumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cxNumeroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cxNumeroActionPerformed

    private void btAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarActionPerformed
        try {
            // 1. Cria o objeto Endereco a partir dos campos de texto.
            Endereco endereco = new Endereco();
            endereco.setRua(cxRua.getText());
            endereco.setBairro(cxBairro.getText());
            endereco.setCidade(cxCidade.getText());
            endereco.setNumero(cxNumero.getText());
            endereco.setComplemento(cxComplemento.getText());

            // 2. Cria o objeto Cliente e associa o Endereço a ele.
            Cliente cliente = new Cliente();
            cliente.setNome(cxNome.getText());
            cliente.setEmail(cxEmail.getText());
            cliente.setTelefone(cxTelefone.getText());
            cliente.setEndereco(endereco);
            cliente.setIdentificador(cxID.getText());

            // 3. Chama o DAO para realizar a inserção transacional.
            ClienteDAO clienteController = new ClienteDAO();
            clienteController.inserirCliente(cliente);

            // 4. Feedback e atualização da tela.
            JOptionPane.showMessageDialog(this, "Cliente inserido com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            limpar();
            listarTab(); // Atualiza a tabela para exibir o novo cliente.

        } catch (SQLException ex) {
            ex.printStackTrace(); // Loga o erro completo no console para depuração.

            // 5. Fornece feedback de erro amigável e específico para o usuário.
            if (ex.getMessage().contains("Duplicate entry")) {
                JOptionPane.showMessageDialog(this, 
                    "Erro: O CPF/CNPJ informado já está cadastrado no sistema.", 
                    "Dado Duplicado", 
                    JOptionPane.WARNING_MESSAGE);
            } else if (ex.getMessage().contains("cannot be null")) {
                 JOptionPane.showMessageDialog(this, 
                    "Erro: Todos os campos obrigatórios devem ser preenchidos.", 
                    "Campo Nulo", 
                    JOptionPane.WARNING_MESSAGE);
            } else {
                // Mensagem genérica para outros erros de SQL.
                JOptionPane.showMessageDialog(this, 
                    "Ocorreu um erro inesperado ao se comunicar com o banco de dados.", 
                    "Erro de Banco de Dados", 
                    JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btAdicionarActionPerformed

    public void limpar(){
        cxID.setText("");
        cxNome.setText("");
        cxTelefone.setText("");
        cxEmail.setText("");
        cxCidade.setText("");
        cxBairro.setText("");
        cxRua.setText("");
        cxNumero.setText("");
        cxComplemento.setText("");
    
        cxID.setEditable(true); 
    
        cxID.requestFocus();
    }
    
    private void btAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtualizarActionPerformed
        // 1. Verifica se o campo de ID está preenchido (ou seja, se um cliente foi selecionado)
        if (cxID.getText().trim().isEmpty() || cxID.isEditable()) {
            JOptionPane.showMessageDialog(this, "Por favor, selecione um cliente na tabela para atualizar.", "Nenhum Cliente Selecionado", JOptionPane.WARNING_MESSAGE);
            return; // Sai do método se nenhum cliente foi selecionado
        }

        try {
            // 2. Cria o objeto Endereco com os dados (possivelmente editados) do formulário.
            Endereco endereco = new Endereco();
            endereco.setRua(cxRua.getText());
            endereco.setBairro(cxBairro.getText());
            endereco.setCidade(cxCidade.getText());
            endereco.setNumero(cxNumero.getText());
            endereco.setComplemento(cxComplemento.getText());

            // 3. Cria o objeto Cliente e associa o Endereço a ele.
            Cliente cliente = new Cliente();
            cliente.setIdentificador(cxID.getText()); // Pega o ID do campo (que está bloqueado)
            cliente.setNome(cxNome.getText());
            cliente.setEmail(cxEmail.getText());
            cliente.setTelefone(cxTelefone.getText());
            cliente.setEndereco(endereco);

            // 4. Pede uma confirmação final ao usuário antes de salvar.
            int resp = JOptionPane.showConfirmDialog(this, "Deseja salvar as alterações para o cliente " + cliente.getNome() + "?", "Confirmar Atualização", JOptionPane.YES_NO_OPTION);

            if (resp == JOptionPane.YES_OPTION) {
                // 5. Chama o DAO para realizar a atualização no banco.
                ClienteDAO clienteController = new ClienteDAO();
                clienteController.atualizarCliente(cliente);

                // 6. Feedback e atualização da tela.
                JOptionPane.showMessageDialog(this, "Cliente atualizado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                limpar();
                listarTab(); 
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro ao atualizar cliente: \n" + ex.getMessage(), "Erro de Banco de Dados", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btAtualizarActionPerformed

    private void btListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btListarActionPerformed
        listarTab();
    }//GEN-LAST:event_btListarActionPerformed

    public void listarTab(){
        DefaultTableModel modelo = (DefaultTableModel) tbCliente.getModel();
        modelo.setRowCount(0);

        try {
            ClienteDAO clienteController = new ClienteDAO();
            List<Cliente> clientes = clienteController.listarClientes();
            for (Cliente cli : clientes) {
                modelo.addRow(new Object[]{
                    cli.getIdentificador(), 
                    cli.getNome(), 
                    cli.getEmail(), 
                    cli.getTelefone(), 
                    cli.getEndereco().getCidade(),
                    cli.getEndereco().getRua(),
                    cli.getEndereco().getBairro(),
                    cli.getEndereco().getNumero(),
                    cli.getEndereco().getComplemento()
                });
            }
        } catch (SQLException ex) {
             JOptionPane.showMessageDialog(this, "Erro ao listar clientes: \n" + ex.getMessage(), "Erro de Banco de Dados", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void btSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSairActionPerformed
        sair();
    }//GEN-LAST:event_btSairActionPerformed

    public void sair(){
        int resp = JOptionPane.showConfirmDialog(this, "Deseja realmente sair?", "Sair", JOptionPane.YES_NO_OPTION);
        if(resp == JOptionPane.YES_OPTION){
            dispose();
        }
    }
    
    private void btDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeletarActionPerformed
        String id = JOptionPane.showInputDialog(this, "Informe o CPF/CNPJ do cliente a ser excluído", "Excluir Cliente", JOptionPane.QUESTION_MESSAGE);
        if (id == null || id.trim().isEmpty()) {
            return;
        }
        
        int resp = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja excluir o cliente com CPF/CNPJ " + id + "?", "Confirmar Exclusão", JOptionPane.YES_NO_OPTION);
        if (resp == JOptionPane.YES_OPTION) {
            try {
                ClienteDAO clienteController = new ClienteDAO();
                clienteController.deletarCliente(id);
                JOptionPane.showMessageDialog(this, "Cliente deletado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                listarTab();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Erro ao deletar cliente: \n" + ex.getMessage(), "Erro de Banco de Dados", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btDeletarActionPerformed

    private void btConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConsultarActionPerformed
        String id = JOptionPane.showInputDialog(this, "Informe o CPF/CNPJ do cliente", "Consultar Cliente", JOptionPane.QUESTION_MESSAGE);
        if (id == null || id.trim().isEmpty()) {
            return;
        }

        try {
            ClienteDAO clienteController = new ClienteDAO();
            Cliente cliente = clienteController.consultarCliente(id);
            if(cliente != null){
                cxID.setText(cliente.getIdentificador());
                cxNome.setText(cliente.getNome());
                cxTelefone.setText(cliente.getTelefone());
                cxEmail.setText(cliente.getEmail());
                cxCidade.setText(cliente.getEndereco().getCidade());
                cxBairro.setText(cliente.getEndereco().getBairro());
                cxRua.setText(cliente.getEndereco().getRua());
                cxNumero.setText(cliente.getEndereco().getNumero());
                cxComplemento.setText(cliente.getEndereco().getComplemento());
            } else {
                JOptionPane.showMessageDialog(this, "Cliente com CPF/CNPJ " + id + " não encontrado.", "Não Encontrado", JOptionPane.WARNING_MESSAGE);
                limpar();
            }
        } catch (SQLException ex) {
             JOptionPane.showMessageDialog(this, "Erro ao consultar cliente: \n" + ex.getMessage(), "Erro de Banco de Dados", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btConsultarActionPerformed

    private void cxIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cxIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cxIDActionPerformed

    private void btListar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btListar1ActionPerformed
        limpar();
    }//GEN-LAST:event_btListar1ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
       listarTab();
    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClienteGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClienteGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClienteGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClienteGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClienteGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdicionar;
    private javax.swing.JButton btAtualizar;
    private javax.swing.JButton btConsultar;
    private javax.swing.JButton btDeletar;
    private javax.swing.JButton btListar;
    private javax.swing.JButton btListar1;
    private javax.swing.JButton btSair;
    private javax.swing.JTextField cxBairro;
    private javax.swing.JTextField cxCidade;
    private javax.swing.JTextField cxComplemento;
    private javax.swing.JTextField cxEmail;
    private javax.swing.JTextField cxID;
    private javax.swing.JTextField cxNome;
    private javax.swing.JTextField cxNumero;
    private javax.swing.JTextField cxRua;
    private javax.swing.JTextField cxTelefone;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbCliente;
    // End of variables declaration//GEN-END:variables
}
